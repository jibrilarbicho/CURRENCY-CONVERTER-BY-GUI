import javax.swing.JOptionPane;


/**
 *
 * @author hp
 */
public class CURRENCYCONVERTERBYGUI extends javax.swing.JFrame {

    private Object FROM;

    /**
     * Creates new form CURRENCYCONVERTERBYGUI
     */
    public CURRENCYCONVERTERBYGUI() {
        initComponents();
    }
double ammount;
double tot;
String  operation;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtfrom = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtto = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("ENTER THE AMOUNT");

        txtfrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "KUWAIT-DINAR", "SAUDI-RIYAL", "EURO", "BIRR" }));
        txtfrom.setSelectedItem(FROM);
        txtfrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfromActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("FROM");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setText("TO");

        txtto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BIRR", "USD", "EURO", "KUWAIT-DINAR", "SAUDI-RIYAL" }));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("CANCEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("CONVERT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel4.setText("WELCOME TO MY CURRENCY CONVERTER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(92, 92, 92)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtfrom, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtfromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfromActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     jTextField1.setText(" ");  
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        double amount=Double.parseDouble(jTextField1.getText());
       
        
        if((txtfrom.getSelectedItem().toString()=="USD") &&( txtto.getSelectedItem().toString()=="BIRR")){   
        tot=amount*53.4047;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"birr","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
      else  if((txtfrom.getSelectedItem().toString()=="USD") &&( txtto.getSelectedItem().toString()=="KUWAIT-DINAR")){   
        tot=amount*0.31;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"KUWAIT-DINAR","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
      else  if((txtfrom.getSelectedItem().toString()=="USD") &&( txtto.getSelectedItem().toString()=="EURO")){   
        tot=amount*0.95;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"EURO","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
      else if((txtfrom.getSelectedItem().toString()=="USD") &&( txtto.getSelectedItem().toString()=="SAUDI-RIYAL")){   
        tot=amount*3.76;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"SAUDI-RIYAL","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
       else if((txtfrom.getSelectedItem().toString()=="KUWAIT-DINAR") &&( txtto.getSelectedItem().toString()=="BIRR")){   
        tot=amount*174.14;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"birr","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
       else if((txtfrom.getSelectedItem().toString()=="KUWAIT-DINAR") &&( txtto.getSelectedItem().toString()=="USD")){   
        tot=amount*3.26;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"USD","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
       else if((txtfrom.getSelectedItem().toString()=="KUWAIT-DINAR") &&( txtto.getSelectedItem().toString()=="SAUDI-RIYAL")){   
        tot=amount*112.26;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"SAUDI RIYAL","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
      else  if((txtfrom.getSelectedItem().toString()=="SAUDI-RIYAL") &&( txtto.getSelectedItem().toString()=="BIRR")){   
        tot=amount*14.21;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"birr","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
       else if((txtfrom.getSelectedItem().toString()=="SAUDI-RIYAL ") &&( txtto.getSelectedItem().toString()=="USD")){   
        tot=amount*0.27;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"USD","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
      else  if((txtfrom.getSelectedItem().toString()=="SAUDI-RIYAL") &&( txtto.getSelectedItem().toString()=="EURO")){   
        tot=amount*0.25;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"EURO","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
      else if((txtfrom.getSelectedItem().toString()=="SAUDI-RIYAL") &&( txtto.getSelectedItem().toString()=="KUWAIT-DINAR")){   
        tot=amount*0.082;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"KUWAIT-DINAR","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        } 
      else  if((txtfrom.getSelectedItem().toString()=="EURO") &&( txtto.getSelectedItem().toString()=="BIRR")){   
        tot=amount*56.22;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"birr","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
     else  if((txtfrom.getSelectedItem().toString()=="EURO") &&( txtto.getSelectedItem().toString()=="USD")){   
        tot=amount*1.05;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"USD","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        } 
       else if((txtfrom.getSelectedItem().toString()=="EURO") &&( txtto.getSelectedItem().toString()=="KUWAIT-DINAR")){   
        tot=amount*0.32;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"KUWAIT-DINAR","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
       else if((txtfrom.getSelectedItem().toString()=="EURO") &&( txtto.getSelectedItem().toString()=="SAUDI-RIYAL")){   
        tot=amount*3.96;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"SAUDI-RIYAL","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        }
      else if((txtfrom.getSelectedItem().toString()=="BIRR") &&( txtto.getSelectedItem().toString()=="USD")){   
        tot=amount*0.019;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"USD","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        } 
       else if((txtfrom.getSelectedItem().toString()=="BIRR") &&( txtto.getSelectedItem().toString()=="EURO")){   
        tot=amount*0.018;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"EURO","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        } 
        else if((txtfrom.getSelectedItem().toString()=="BIRR") &&( txtto.getSelectedItem().toString()=="KUWAIT-DINAR")){   
        tot=amount*0.0057;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"KUWAIT-DINAR","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        } 
       else if((txtfrom.getSelectedItem().toString()=="BIRR") &&( txtto.getSelectedItem().toString()=="SAUDI-RIYAL")){   
        tot=amount*0.070;
        JOptionPane.showMessageDialog(null,"YOUR AMOUNT="+tot+"SAUDI-RIYAL","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
        } 
      // else if (amount<0){
       //         JOptionPane.showMessageDialog(null,"PLEASE ENTER YOUR AMOUNT AGAIN","CURRENCY CONVERTER",JOptionPane.PLAIN_MESSAGE);
   
     //  } 
   
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CURRENCYCONVERTERBYGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CURRENCYCONVERTERBYGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CURRENCYCONVERTERBYGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CURRENCYCONVERTERBYGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CURRENCYCONVERTERBYGUI().setVisible(true);
            }
        });
    }
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> txtfrom;
    private javax.swing.JComboBox<String> txtto;
}
